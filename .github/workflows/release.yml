name: 'GitHub Release and NPM Publish'

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: write

jobs:
  github-release:
    name: GitHub Release

    runs-on: ubuntu-latest

    # Release if stable tag is pushed
    if: ${{ !contains(github.ref, '-') }}

    steps:
      -
        name: Checkout
        uses: actions/checkout@v5
      -
        name: Prepare
        run: echo "VERSION_ANCHOR=${GITHUB_REF_NAME//./}" >> $GITHUB_ENV
      -
        name: Release
        uses: softprops/action-gh-release@v2
        with:
          body: |
            [CHANGELOG](https://github.com/ttionya/tsconfig/blob/master/CHANGELOG.md#${{ env.VERSION_ANCHOR }})

  npm-publish:
    name: NPM Publish

    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v5
      -
        name: Set up NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: https://registry.npmjs.org/
      -
        name: Install PNPM
        uses: pnpm/action-setup@v4.1.0
        with:
          version: latest
          run_install: true
      -
        name: NPM Publish
        # https://github.com/pnpm/pnpm/issues/5894
        run: |
          TAG="$(echo "${GITHUB_REF_NAME}" | grep -cq '-beta.' && echo 'beta' || echo 'latest')"
          MAJOR_VERSION="$(echo "${GITHUB_REF_NAME%%.*}")"
          npm publish --tag "${TAG}-${MAJOR_VERSION#v}"
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      -
        name: Tagging latest
        if: ${{ !contains(github.ref, '-') && startsWith(github.ref_name, 'v3.') }}
        run: |
          npm dist-tag add @ttionya/tsconfig@${GITHUB_REF_NAME#v} latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
